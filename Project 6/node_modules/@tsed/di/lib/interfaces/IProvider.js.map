{"version":3,"sources":["interfaces/IProvider.ts"],"names":[],"mappings":"","file":"IProvider.js","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {ProviderScope} from \"./ProviderScope\";\nimport {ProviderType} from \"./ProviderType\";\nimport {TokenProvider} from \"./TokenProvider\";\n\n/**\n *\n */\nexport interface IProvider<T> {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: TokenProvider;\n  /**\n   * Provider type\n   */\n  type?: ProviderType | string;\n  /**\n   * Instance build by the injector\n   */\n  instance?: T;\n  /**\n   * Define dependencies to build the provider\n   */\n  deps?: TokenProvider[];\n  /**\n   * Class to instantiate for the `token`.\n   */\n  useClass?: Type<T>;\n  /**\n   * Provide a function to build the provider\n   */\n  useFactory?: Function;\n  /**\n   * Provide predefined value\n   */\n  useValue?: any;\n  /**\n   * Scope used by the injector to build the provider.\n   */\n  scope?: ProviderScope;\n\n  /**\n   *\n   */\n  [key: string]: any;\n}\n"],"sourceRoot":"../../src"}