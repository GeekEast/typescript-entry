{"version":3,"sources":["jsonschema/services/JsonSchemesService.ts"],"names":[],"mappings":";;;AACA,qCAA+C;AAC/C,iCAAiC;AAEjC,2EAAsE;AAGtE,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,oBAA8B;IAGpE;QACE,KAAK,CAAC,yCAAmB,CAAC,CAAC;QAHrB,UAAK,GAAgC,IAAI,GAAG,EAAE,CAAC;IAIvD,CAAC;IAED;;;;OAIG;IACH,mBAAmB,CAAC,MAAiB;QACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,yCAAmB,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;SACzE;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;CACF,CAAA;AAnBY,kBAAkB;IAD9B,YAAO,EAAE;;GACG,kBAAkB,CAmB9B;AAnBY,gDAAkB","file":"JsonSchemesService.js","sourcesContent":["import {JSONSchema6} from \"json-schema\";\nimport {ProxyRegistry, Type} from \"@tsed/core\";\nimport {Service} from \"@tsed/di\";\nimport {JsonSchema} from \"../class/JsonSchema\";\nimport {JsonSchemesRegistry} from \"../registries/JsonSchemesRegistry\";\n\n@Service()\nexport class JsonSchemesService extends ProxyRegistry<any, JsonSchema> {\n  private cache: Map<Type<any>, JSONSchema6> = new Map();\n\n  constructor() {\n    super(JsonSchemesRegistry);\n  }\n\n  /**\n   *\n   * @param {Type<any>} target\n   * @returns {JSONSchema4}\n   */\n  getSchemaDefinition(target: Type<any>): JSONSchema6 | undefined {\n    if (!this.cache.has(target)) {\n      this.cache.set(target, JsonSchemesRegistry.getSchemaDefinition(target));\n    }\n\n    return this.cache.get(target);\n  }\n}\n"],"sourceRoot":"../../../src"}