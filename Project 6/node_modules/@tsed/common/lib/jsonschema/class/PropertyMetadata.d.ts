import { Storable, Type } from "@tsed/core";
import { IPropertyOptions } from "../../converters/interfaces/IPropertyOptions";
import { JsonSchema } from "./JsonSchema";
export declare class PropertyMetadata extends Storable implements IPropertyOptions {
    /**
     * Allowed value when the entity is required.
     * @type {Array}
     */
    private _allowedRequiredValues;
    private _ignoreProperty;
    constructor(target: any, propertyKey: any);
    /**
     *
     * @param value
     */
    /**
    *
    * @returns {Type<any>}
    */
    type: Type<any>;
    /**
     *
     * @returns {JsonSchema}
     */
    readonly schema: JsonSchema;
    /**
     * Return the required state.
     * @returns {boolean}
     */
    /**
    * Change the state of the required data.
    * @param value
    */
    required: boolean;
    /**
     * Return the allowed values.
     * @returns {any[]}
     */
    /**
    * Set the allowed values when the value is required.
    * @param {any[]} value
    */
    allowedRequiredValues: any[];
    /**
     *
     * @returns {boolean}
     */
    /**
    *
    * @param {boolean} value
    */
    ignoreProperty: boolean;
    /**
     *
     * @param value
     * @returns {boolean}
     * @deprecated
     */
    isValidRequiredValue(value: any): boolean;
    /**
     *
     * @param value
     * @returns {boolean}
     */
    isRequired(value: any): boolean;
}
