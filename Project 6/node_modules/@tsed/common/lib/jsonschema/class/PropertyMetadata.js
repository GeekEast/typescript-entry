"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@tsed/core");
const JsonSchemesRegistry_1 = require("../registries/JsonSchemesRegistry");
class PropertyMetadata extends core_1.Storable {
    constructor(target, propertyKey) {
        super(target, propertyKey);
        /**
         * Allowed value when the entity is required.
         * @type {Array}
         */
        this._allowedRequiredValues = [];
        this._ignoreProperty = false;
        this.store.set("schema", JsonSchemesRegistry_1.JsonSchemesRegistry.property(this.target, this.propertyKey, this.type, this.collectionType));
    }
    /**
     *
     * @param value
     */
    set type(value) {
        this._type = value || Object;
        this.store.set("schema", JsonSchemesRegistry_1.JsonSchemesRegistry.property(this.target, this.propertyKey, this.type, this.collectionType));
    }
    /**
     *
     * @returns {Type<any>}
     */
    get type() {
        return this._type;
    }
    /**
     *
     * @returns {JsonSchema}
     */
    get schema() {
        return this.store.get("schema");
    }
    /**
     * Return the required state.
     * @returns {boolean}
     */
    get required() {
        return JsonSchemesRegistry_1.JsonSchemesRegistry.required(this.target, this.name || this.propertyKey);
    }
    /**
     * Change the state of the required data.
     * @param value
     */
    set required(value) {
        JsonSchemesRegistry_1.JsonSchemesRegistry.required(this.target, this.name || this.propertyKey, value);
    }
    /**
     * Return the allowed values.
     * @returns {any[]}
     */
    get allowedRequiredValues() {
        return this._allowedRequiredValues;
    }
    /**
     * Set the allowed values when the value is required.
     * @param {any[]} value
     */
    set allowedRequiredValues(value) {
        this._allowedRequiredValues = value;
    }
    /**
     *
     * @returns {boolean}
     */
    get ignoreProperty() {
        return this._ignoreProperty;
    }
    /**
     *
     * @param {boolean} value
     */
    set ignoreProperty(value) {
        this._ignoreProperty = value;
    }
    /**
     *
     * @param value
     * @returns {boolean}
     * @deprecated
     */
    isValidRequiredValue(value) {
        if (this.required) {
            if (value === undefined || value === null || value === "") {
                if (this.allowedRequiredValues.indexOf(value) === -1) {
                    return false;
                }
            }
        }
        return true;
    }
    /**
     *
     * @param value
     * @returns {boolean}
     */
    isRequired(value) {
        return this.required && [undefined, null, ""].indexOf(value) > -1 && this.allowedRequiredValues.indexOf(value) === -1;
    }
}
tslib_1.__decorate([
    core_1.NotEnumerable(),
    tslib_1.__metadata("design:type", Array)
], PropertyMetadata.prototype, "_allowedRequiredValues", void 0);
tslib_1.__decorate([
    core_1.NotEnumerable(),
    tslib_1.__metadata("design:type", Boolean)
], PropertyMetadata.prototype, "_ignoreProperty", void 0);
exports.PropertyMetadata = PropertyMetadata;

//# sourceMappingURL=PropertyMetadata.js.map
