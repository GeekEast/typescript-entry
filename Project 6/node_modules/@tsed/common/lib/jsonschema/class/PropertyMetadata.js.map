{"version":3,"sources":["jsonschema/class/PropertyMetadata.ts"],"names":[],"mappings":";;;AAAA,qCAAyD;AAEzD,2EAAsE;AAGtE,MAAa,gBAAiB,SAAQ,eAAQ;IAW5C,YAAY,MAAW,EAAE,WAAgB;QACvC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAX7B;;;WAGG;QAEK,2BAAsB,GAAU,EAAE,CAAC;QAGnC,oBAAe,GAAY,KAAK,CAAC;QAIvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,yCAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAqB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAClI,CAAC;IAED;;;OAGG;IACH,IAAI,IAAI,CAAC,KAAgB;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,MAAM,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,yCAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAqB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAClI,CAAC;IAED;;;OAGG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACH,IAAI,QAAQ;QACV,OAAO,yCAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAK,IAAI,CAAC,WAAsB,CAAC,CAAC;IAC9F,CAAC;IAED;;;OAGG;IACH,IAAI,QAAQ,CAAC,KAAc;QACzB,yCAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAK,IAAI,CAAC,WAAsB,EAAE,KAAK,CAAC,CAAC;IAC9F,CAAC;IAED;;;OAGG;IACH,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACrC,CAAC;IAED;;;OAGG;IACH,IAAI,qBAAqB,CAAC,KAAY;QACpC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;IACtC,CAAC;IAED;;;OAGG;IACH,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,IAAI,cAAc,CAAC,KAAc;QAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED;;;;;OAKG;IACH,oBAAoB,CAAC,KAAU;QAC7B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,EAAE;gBACzD,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;oBACpD,OAAO,KAAK,CAAC;iBACd;aACF;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,KAAU;QACnB,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACxH,CAAC;CACF;AA7GC;IADC,oBAAa,EAAE;;gEAC2B;AAG3C;IADC,oBAAa,EAAE;;yDACyB;AAT3C,4CAmHC","file":"PropertyMetadata.js","sourcesContent":["import {NotEnumerable, Storable, Type} from \"@tsed/core\";\nimport {IPropertyOptions} from \"../../converters/interfaces/IPropertyOptions\";\nimport {JsonSchemesRegistry} from \"../registries/JsonSchemesRegistry\";\nimport {JsonSchema} from \"./JsonSchema\";\n\nexport class PropertyMetadata extends Storable implements IPropertyOptions {\n  /**\n   * Allowed value when the entity is required.\n   * @type {Array}\n   */\n  @NotEnumerable()\n  private _allowedRequiredValues: any[] = [];\n\n  @NotEnumerable()\n  private _ignoreProperty: boolean = false;\n\n  constructor(target: any, propertyKey: any) {\n    super(target, propertyKey);\n    this.store.set(\"schema\", JsonSchemesRegistry.property(this.target, this.propertyKey as string, this.type, this.collectionType));\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set type(value: Type<any>) {\n    this._type = value || Object;\n    this.store.set(\"schema\", JsonSchemesRegistry.property(this.target, this.propertyKey as string, this.type, this.collectionType));\n  }\n\n  /**\n   *\n   * @returns {Type<any>}\n   */\n  get type(): Type<any> {\n    return this._type;\n  }\n\n  /**\n   *\n   * @returns {JsonSchema}\n   */\n  get schema(): JsonSchema {\n    return this.store.get(\"schema\");\n  }\n\n  /**\n   * Return the required state.\n   * @returns {boolean}\n   */\n  get required(): boolean {\n    return JsonSchemesRegistry.required(this.target, this.name || (this.propertyKey as string));\n  }\n\n  /**\n   * Change the state of the required data.\n   * @param value\n   */\n  set required(value: boolean) {\n    JsonSchemesRegistry.required(this.target, this.name || (this.propertyKey as string), value);\n  }\n\n  /**\n   * Return the allowed values.\n   * @returns {any[]}\n   */\n  get allowedRequiredValues(): any[] {\n    return this._allowedRequiredValues;\n  }\n\n  /**\n   * Set the allowed values when the value is required.\n   * @param {any[]} value\n   */\n  set allowedRequiredValues(value: any[]) {\n    this._allowedRequiredValues = value;\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get ignoreProperty(): boolean {\n    return this._ignoreProperty;\n  }\n\n  /**\n   *\n   * @param {boolean} value\n   */\n  set ignoreProperty(value: boolean) {\n    this._ignoreProperty = value;\n  }\n\n  /**\n   *\n   * @param value\n   * @returns {boolean}\n   * @deprecated\n   */\n  isValidRequiredValue(value: any): boolean {\n    if (this.required) {\n      if (value === undefined || value === null || value === \"\") {\n        if (this.allowedRequiredValues.indexOf(value) === -1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  isRequired(value: any): boolean {\n    return this.required && [undefined, null, \"\"].indexOf(value) > -1 && this.allowedRequiredValues.indexOf(value) === -1;\n  }\n}\n"],"sourceRoot":"../../../src"}