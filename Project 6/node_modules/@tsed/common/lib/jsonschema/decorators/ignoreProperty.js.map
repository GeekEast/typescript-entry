{"version":3,"sources":["jsonschema/decorators/ignoreProperty.ts"],"names":[],"mappings":";;AAAA,yCAAwC;AAGxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4DG;AACH,SAAgB,cAAc;IAC5B,OAAO,mBAAU,CAAC,CAAC,gBAAkC,EAAE,EAAE;QACvD,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,wCAIC","file":"ignoreProperty.js","sourcesContent":["import {PropertyFn} from \"@tsed/common\";\nimport {PropertyMetadata} from \"../class/PropertyMetadata\";\n\n/**\n * Disable serialization for this property when the Converters service will render the JSON object.\n *\n * ::: tip\n * This decorator is used by the Converters to serialize correctly your model.\n * :::\n *\n * ::: warning\n * Swagger will not generate documentation for the ignored property.\n * :::\n *\n * ```typescript\n * class User {\n *   @IgnoreProperty()\n *   _id: string;\n *\n *   @Property()\n *   firstName: string;\n *\n *   @Property()\n *   lastName: string;\n *\n *   @IgnoreProperty()\n *   password: string;\n * }\n * ```\n *\n * The controller:\n * ```typescript\n * import {Post, Controller, BodyParams} from \"@tsed/common\";\n * import {Person} from \"../models/Person\";\n *\n * @Controller(\"/\")\n * export class UsersCtrl {\n *\n *   @Get(\"/\")\n *   get(): User {\n *       const user = new User();\n *       user._id = \"12345\";\n *       user.firstName = \"John\";\n *       user.lastName = \"Doe\";\n *       user.password = \"secretpassword\";\n *         return\n *   }\n * }\n * ```\n *\n * The expected json object:\n *\n * ```json\n * {\n *  \"firstName\": \"John\",\n *  \"lastName\": \"Doe\"\n * }\n * ```\n *\n * @param {Type<any>} type\n * @returns {Function}\n * @decorator\n * @converters\n */\nexport function IgnoreProperty() {\n  return PropertyFn((propertyMetadata: PropertyMetadata) => {\n    propertyMetadata.ignoreProperty = true;\n  });\n}\n"],"sourceRoot":"../../../src"}