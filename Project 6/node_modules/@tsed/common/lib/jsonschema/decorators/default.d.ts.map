{"version":3,"sources":["jsonschema/decorators/default.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,wBAAgB,OAAO,CAAC,YAAY,EAAE,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,EAAE,iCAEnE","file":"default.d.ts","sourcesContent":["import {Schema} from \"./schema\";\n\n/**\n * There are no restrictions placed on the value of this keyword.\n *\n * This keyword can be used to supply a default JSON value associated with a particular schema.\n * It is RECOMMENDED that a default value be valid against the associated schema.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @Default(\"10\")\n *    property: string = \"10\";\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"string\",\n *       \"default\": \"10\"\n *     }\n *   }\n * }\n * ```\n *\n * @param {string | number | boolean | {}} defaultValue\n * @returns {Function}\n * @decorator\n * @ajv\n * @property\n * @jsonschema\n */\nexport function Default(defaultValue: string | number | boolean | {}) {\n  return Schema({default: defaultValue});\n}\n"],"sourceRoot":"../../../src"}