{"version":3,"sources":["jsonschema/decorators/uniqueItems.ts"],"names":[],"mappings":"AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2CG;AACH,wBAAgB,WAAW,CAAC,WAAW,GAAE,OAAc,iCAItD","file":"uniqueItems.d.ts","sourcesContent":["import {JsonSchema} from \"../class/JsonSchema\";\nimport {decoratorSchemaFactory} from \"../utils/decoratorSchemaFactory\";\n\n/**\n * If this keyword has boolean value false, the instance validates successfully. If it has boolean value true, the instance validates successfully if all of its elements are unique.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @UniqueItems()  // default true\n *    property: number[];\n * }\n * ```\n *\n *  * ```typescript\n * class Model {\n *    @PropertyType(String)\n *    @UniqueItems()\n *    property: string[];\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"array\",\n *       \"uniqueItems\": true,\n *       \"items\": {\n *         \"type\": \"string\"\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * @param {boolean} uniqueItems\n * @returns {Function}\n * @decorator\n * @ajv\n * @jsonschema\n * @property\n */\nexport function UniqueItems(uniqueItems: boolean = true) {\n  return decoratorSchemaFactory((schema: JsonSchema) => {\n    schema.uniqueItems = uniqueItems;\n  });\n}\n"],"sourceRoot":"../../../src"}