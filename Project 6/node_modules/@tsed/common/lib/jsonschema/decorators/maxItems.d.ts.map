{"version":3,"sources":["jsonschema/decorators/maxItems.ts"],"names":[],"mappings":"AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,wBAAgB,QAAQ,CAAC,QAAQ,EAAE,MAAM,iCAQxC","file":"maxItems.d.ts","sourcesContent":["import {JsonSchema} from \"../class/JsonSchema\";\nimport {decoratorSchemaFactory} from \"../utils/decoratorSchemaFactory\";\n\n/**\n * The value `maxItems` MUST be a non-negative integer.\n *\n * An array instance is valid against `maxItems` if its size is less than, or equal to, the value of this keyword.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @PropertyType(String)\n *    @MaxItems(10)\n *    property: string[];\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"number\",\n *       \"maxItems\": 10\n *     }\n *   }\n * }\n * ```\n *\n * @param {number} maxItems\n * @returns {Function}\n * @decorator\n * @ajv\n * @property\n * @jsonschema\n */\nexport function MaxItems(maxItems: number) {\n  if (maxItems < 0) {\n    throw new Error(\"The value of maxItems MUST be a non-negative integer.\");\n  }\n\n  return decoratorSchemaFactory((schema: JsonSchema) => {\n    schema.maxItems = maxItems;\n  });\n}\n"],"sourceRoot":"../../../src"}