{"version":3,"sources":["jsonschema/decorators/propertyName.ts"],"names":[],"mappings":"AAGA;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,wBAAgB,YAAY,CAAC,IAAI,EAAE,MAAM,YAIxC","file":"propertyName.d.ts","sourcesContent":["import {PropertyMetadata} from \"../class/PropertyMetadata\";\nimport {PropertyFn} from \"./jsonProperty\";\n\n/**\n * Create an alias of the propertyKey that must be used by the converter.\n *\n * ::: tip\n * This decorator is used by the Converters to deserialize correctly you model.\n * :::\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @PropertyType(String)\n *    property: string[];\n * }\n * ```\n *\n * @param {string} name\n * @returns {Function}\n * @decorator\n * @converters\n * @jsonschema\n * @property\n */\nexport function PropertyName(name: string) {\n  return PropertyFn((propertyMetadata: PropertyMetadata) => {\n    propertyMetadata.name = name;\n  });\n}\n"],"sourceRoot":"../../../src"}