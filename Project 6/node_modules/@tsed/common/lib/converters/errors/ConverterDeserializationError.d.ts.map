{"version":3,"sources":["converters/errors/ConverterDeserializationError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAS,IAAI,EAAC,MAAM,YAAY,CAAC;AACxC,OAAO,EAAC,mBAAmB,EAAC,MAAM,mBAAmB,CAAC;AAEtD;;GAEG;AACH,qBAAa,6BAA8B,SAAQ,mBAAmB;IACpE,IAAI,EAAE,MAAM,CAAqC;IACjD,KAAK,EAAE,GAAG,CAAC;gBAEC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;IAKnD;;;OAGG;IACH,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;CAG5D","file":"ConverterDeserializationError.d.ts","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {InternalServerError} from \"ts-httpexceptions\";\n\n/**\n * @private\n */\nexport class ConverterDeserializationError extends InternalServerError {\n  name: string = \"CONVERTER_DESERIALIZATION_ERROR\";\n  stack: any;\n\n  constructor(target: Type<any>, obj: any, err: Error) {\n    super(ConverterDeserializationError.buildMessage(target, obj, err));\n    this.stack = err.stack;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  static buildMessage(target: Type<any>, obj: any, err: Error) {\n    return `Conversion failed for class \"${nameOf(target)}\" with object => ${JSON.stringify(obj)}.\\n${err.message}`.trim();\n  }\n}\n"],"sourceRoot":"../../../src"}