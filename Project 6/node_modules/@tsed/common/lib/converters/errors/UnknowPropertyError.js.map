{"version":3,"sources":["converters/errors/UnknowPropertyError.ts"],"names":[],"mappings":";;AAAA,qCAAwC;AACxC,yDAA6C;AAE7C;;GAEG;AACH,MAAa,mBAAoB,SAAQ,8BAAU;IACjD,YAAY,MAAiB,EAAE,YAA6B;QAC1D,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAChE,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,YAAY,CAAC,MAAiB,EAAE,YAA6B;QAClE,OAAO,YAAY,MAAM,CAAC,YAAY,CAAC,aAAa,aAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACvF,CAAC;CACF;AAdD,kDAcC","file":"UnknowPropertyError.js","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {BadRequest} from \"ts-httpexceptions\";\n\n/**\n * @private\n */\nexport class UnknowPropertyError extends BadRequest {\n  constructor(target: Type<any>, propertyName: string | symbol) {\n    super(UnknowPropertyError.buildMessage(target, propertyName));\n  }\n\n  /**\n   *\n   * @returns {string}\n   * @param target\n   * @param propertyName\n   */\n  static buildMessage(target: Type<any>, propertyName: string | symbol) {\n    return `Property ${String(propertyName)} on class ${nameOf(target)} is not allowed.`;\n  }\n}\n"],"sourceRoot":"../../../src"}