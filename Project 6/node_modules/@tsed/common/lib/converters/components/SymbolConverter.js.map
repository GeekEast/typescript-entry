{"version":3,"sources":["converters/components/SymbolConverter.ts"],"names":[],"mappings":";;;AAAA,uDAAkD;AAGlD;;;;GAIG;AAEH,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,WAAW,CAAC,IAAY,EAAE,MAAW;QACnC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,OAAO,MAAM;aACV,QAAQ,EAAE;aACV,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;aACtB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACtB,CAAC;CACF,CAAA;AAXY,eAAe;IAD3B,qBAAS,CAAC,MAAM,CAAC;GACL,eAAe,CAW3B;AAXY,0CAAe","file":"SymbolConverter.js","sourcesContent":["import {Converter} from \"../decorators/converter\";\nimport {IConverter} from \"../interfaces/index\";\n\n/**\n * Converter component for the `Symbol` Type.\n * @converters\n * @component\n */\n@Converter(Symbol)\nexport class SymbolConverter implements IConverter {\n  deserialize(data: string, target: any): symbol {\n    return Symbol(data);\n  }\n\n  serialize(object: Symbol): any {\n    return object\n      .toString()\n      .replace(\"Symbol(\", \"\")\n      .replace(\")\", \"\");\n  }\n}\n"],"sourceRoot":"../../../src"}