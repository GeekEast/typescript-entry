{"version":3,"sources":["converters/components/ArrayConverter.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,UAAU,EAAE,aAAa,EAAE,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAE3E;;;;GAIG;AACH,qBACa,cAAe,YAAW,UAAU;IAC/C,WAAW,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,aAAa,GAAG,CAAC,EAAE;IAIrF,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,WAAW;CAG/C","file":"ArrayConverter.d.ts","sourcesContent":["import {Converter} from \"../decorators/converter\";\nimport {IConverter, IDeserializer, ISerializer} from \"../interfaces/index\";\n\n/**\n * Converter component for the `Array` Type.\n * @converters\n * @component\n */\n@Converter(Array)\nexport class ArrayConverter implements IConverter {\n  deserialize<T>(data: any, target: any, baseType: T, deserializer: IDeserializer): T[] {\n    return [].concat(data).map(item => deserializer!(item, baseType));\n  }\n\n  serialize(data: any[], serializer: ISerializer) {\n    return [].concat(data as any).map(item => serializer(item));\n  }\n}\n"],"sourceRoot":"../../../src"}