{"version":3,"sources":["converters/components/MapConverter.ts"],"names":[],"mappings":";;;AAAA,uDAAkD;AAGlD;;;;GAIG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB;;;;;;;OAOG;IACH,WAAW,CAAI,IAAS,EAAE,MAAW,EAAE,QAAW,EAAE,YAA2B;QAC7E,MAAM,GAAG,GAAG,IAAI,GAAG,EAAa,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC9B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAM,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAI,IAAoB,EAAE,UAAuB;QACxD,MAAM,GAAG,GAAQ,EAAE,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAQ,EAAE,GAAW,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAExE,OAAO,GAAG,CAAC;IACb,CAAC;CACF,CAAA;AA/BY,YAAY;IADxB,qBAAS,CAAC,GAAG,CAAC;GACF,YAAY,CA+BxB;AA/BY,oCAAY","file":"MapConverter.js","sourcesContent":["import {Converter} from \"../decorators/converter\";\nimport {IConverter, IDeserializer, ISerializer} from \"../interfaces/index\";\n\n/**\n * Converter component for the `Map` Type.\n * @converters\n * @component\n */\n@Converter(Map)\nexport class MapConverter implements IConverter {\n  /**\n   *\n   * @param data\n   * @param target\n   * @param baseType\n   * @param deserializer\n   * @returns {Map<string, T>}\n   */\n  deserialize<T>(data: any, target: any, baseType: T, deserializer: IDeserializer): Map<string, T> {\n    const obj = new Map<string, T>();\n\n    Object.keys(data).forEach(key => {\n      obj.set(key, deserializer(data[key], baseType) as T);\n    });\n\n    return obj;\n  }\n\n  /**\n   *\n   * @param data\n   * @param serializer\n   */\n  serialize<T>(data: Map<string, T>, serializer: ISerializer): any {\n    const obj: any = {};\n\n    data.forEach((value: T, key: string) => (obj[key] = serializer(value)));\n\n    return obj;\n  }\n}\n"],"sourceRoot":"../../../src"}