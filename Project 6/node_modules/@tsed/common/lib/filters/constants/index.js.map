{"version":3,"sources":["filters/constants/index.ts"],"names":[],"mappings":";;AAAA,iEAA+D;AAElD,QAAA,cAAc,GAAG,sBAAsB,CAAC;AACrD;;;;GAIG;AACU,QAAA,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9C;;;;GAIG;AACU,QAAA,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACzC;;;;GAIG;AACU,QAAA,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACjD;;;;GAIG;AACU,QAAA,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AACnD;;;;GAIG;AACU,QAAA,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACpD;;;;GAIG;AACU,QAAA,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAEpD;;GAEG;AACH,kCAAiB,CAAC,GAAG,CAAC,wBAAgB,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACnE;;GAEG;AACH,kCAAiB,CAAC,GAAG,CAAC,uBAAe,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACjE;;GAEG;AACH,kCAAiB,CAAC,GAAG,CAAC,uBAAe,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC9D;;GAEG;AACH,kCAAiB,CAAC,GAAG,CAAC,mBAAW,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACzD;;GAEG;AACH,kCAAiB,CAAC,GAAG,CAAC,qBAAa,EAAE,MAAM,CAAC,EAAE;IAC5C,MAAM,EAAE,GAAG,kCAAiB,CAAC,GAAG,CAAC,uBAAe,CAAE,CAAC;IAEnD,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjC,CAAC,CAAC,CAAC;AACH;;GAEG;AACH,kCAAiB,CAAC,GAAG,CAAC,qBAAa,EAAE,MAAM,CAAC,EAAE;IAC5C,MAAM,EAAE,GAAG,kCAAiB,CAAC,GAAG,CAAC,uBAAe,CAAE,CAAC;IAEnD,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC7B,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":["import {FilterPreHandlers} from \"../registries/FilterRegistry\";\n\nexport const PARAM_METADATA = \"tsed:params:metadata\";\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nexport const EXPRESS_NEXT_FN = Symbol(\"next\");\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nexport const EXPRESS_ERR = Symbol(\"err\");\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nexport const EXPRESS_REQUEST = Symbol(\"request\");\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nexport const EXPRESS_RESPONSE = Symbol(\"response\");\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nexport const RESPONSE_DATA = Symbol(\"responseData\");\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nexport const ENDPOINT_INFO = Symbol(\"endpointInfo\");\n\n/**\n * Response PreHandler\n */\nFilterPreHandlers.set(EXPRESS_RESPONSE, locals => locals.response);\n/**\n * Request PreHandler\n */\nFilterPreHandlers.set(EXPRESS_REQUEST, locals => locals.request);\n/**\n * Next PreHandler\n */\nFilterPreHandlers.set(EXPRESS_NEXT_FN, locals => locals.next);\n/**\n * Express error PreHandler\n */\nFilterPreHandlers.set(EXPRESS_ERR, locals => locals.err);\n/**\n * EndpointInfo PreHandler\n */\nFilterPreHandlers.set(ENDPOINT_INFO, locals => {\n  const op = FilterPreHandlers.get(EXPRESS_REQUEST)!;\n\n  return op(locals).ctx.endpoint;\n});\n/**\n * ResponseData PreHandler\n */\nFilterPreHandlers.set(RESPONSE_DATA, locals => {\n  const op = FilterPreHandlers.get(EXPRESS_REQUEST)!;\n\n  return op(locals).ctx.data;\n});\n"],"sourceRoot":"../../../src"}