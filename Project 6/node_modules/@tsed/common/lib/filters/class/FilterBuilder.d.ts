import { InjectorService } from "@tsed/di";
import { ParamMetadata } from "./ParamMetadata";
export declare class FilterBuilder {
    private injector;
    constructor(injector: InjectorService);
    /**
     *
     * @param {Function} filter
     * @param {Function} newFilter
     * @param args
     * @returns {(value: any) => any}
     */
    private static pipe;
    /**
     *
     */
    build(param: ParamMetadata): Function;
    /**
     *
     * @param {Type<IFilter>} target
     * @param args
     * @returns {any}
     */
    private invoke;
    /**
     *
     * @param {ParamMetadata} param
     * @returns {any}
     */
    private initFilter;
    /**
     *
     * @param filter
     * @param {ParamMetadata} param
     * @returns {(value: any) => any}
     */
    private appendRequiredFilter;
    /**
     *
     * @param filter
     * @param param
     * @returns {(value: any) => any}
     */
    private appendConverterFilter;
    /**
     *
     * @param filter
     * @param param
     * @returns {(value: any) => any}
     */
    private appendValidationFilter;
}
