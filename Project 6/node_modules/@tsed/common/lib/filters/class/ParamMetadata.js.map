{"version":3,"sources":["filters/class/ParamMetadata.ts"],"names":[],"mappings":"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","file":"ParamMetadata.js","sourcesContent":["import {nameOf, NotEnumerable, Storable, Type} from \"@tsed/core\";\nimport {IParamOptions} from \"../interfaces\";\nimport {ParamTypes} from \"../interfaces/ParamTypes\";\n\nexport class ParamMetadata extends Storable implements IParamOptions<any> {\n  /**\n   *\n   */\n  @NotEnumerable()\n  protected _expression: string | RegExp;\n  /**\n   *\n   * @type {boolean}\n   */\n  @NotEnumerable()\n  protected _useConverter: boolean = true;\n  /**\n   *\n   * @type {boolean}\n   */\n  @NotEnumerable()\n  private _useValidation: boolean = false;\n\n  /**\n   *\n   */\n  @NotEnumerable()\n  protected _service: string | Type<any> | symbol;\n\n  /**\n   * Allowed value when the entity is required.\n   * @type {Array}\n   */\n  @NotEnumerable()\n  private _allowedRequiredValues: any[] = [];\n\n  /**\n   * Required entity.\n   */\n  @NotEnumerable()\n  protected _required: boolean = false;\n  /**\n   *\n   */\n  @NotEnumerable()\n  private _paramType: ParamTypes;\n\n  /**\n   *\n   * @returns {string|RegExp}\n   */\n  get expression(): string | RegExp {\n    return this._expression;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set expression(value: string | RegExp) {\n    this._expression = value;\n  }\n\n  /**\n   *\n   * @returns {symbol}\n   */\n  get service(): Type<any> | symbol {\n    return this._service as any;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set service(value: Type<any> | symbol) {\n    this._service = value;\n    this.name = nameOf(value);\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set useConverter(value: boolean) {\n    this._useConverter = value;\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get useConverter(): boolean {\n    return this._useConverter;\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get useValidation(): boolean {\n    return this._useValidation;\n  }\n\n  /**\n   *\n   * @param {boolean} value\n   */\n  set useValidation(value: boolean) {\n    this._useValidation = value;\n  }\n\n  /**\n   * Return the required state.\n   * @returns {boolean}\n   */\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * Change the state of the required data.\n   * @param value\n   */\n  set required(value: boolean) {\n    this._required = value;\n  }\n\n  /**\n   * Return the allowed values.\n   * @returns {any[]}\n   */\n  get allowedRequiredValues(): any[] {\n    return this._allowedRequiredValues;\n  }\n\n  /**\n   * Set the allowed values when the value is required.\n   * @param {any[]} value\n   */\n  set allowedRequiredValues(value: any[]) {\n    this._allowedRequiredValues = value;\n  }\n\n  /**\n   *\n   * @returns {ParamTypes}\n   */\n  get paramType(): ParamTypes {\n    return this._paramType;\n  }\n\n  /**\n   *\n   * @param {ParamTypes} value\n   */\n  set paramType(value: ParamTypes) {\n    this._paramType = value;\n  }\n\n  /**\n   * This method use `EntityDescription.required` and `allowedRequiredValues` to validate the value.\n   * @param value\n   * @returns {boolean}\n   * @deprecated\n   */\n  isValidRequiredValue(value: any): boolean {\n    if (this.required) {\n      if (value === undefined || value === null || value === \"\") {\n        if (this.allowedRequiredValues.indexOf(value) === -1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  isRequired(value: any): boolean {\n    return this.required && [undefined, null, \"\"].indexOf(value) > -1 && this.allowedRequiredValues.indexOf(value) === -1;\n  }\n\n  /**\n   *\n   * @returns {{service: (string|symbol), name: string, expression: string, required: boolean, use: undefined, baseType: undefined}}\n   */\n  toJSON() {\n    return {\n      service: nameOf(this._service),\n      name: this.name,\n      expression: this._expression,\n      required: this._required,\n      use: this.typeName,\n      baseType: this.collectionName\n    };\n  }\n}\n"],"sourceRoot":"../../../src"}