{"version":3,"sources":["filters/errors/ParseExpressionError.ts"],"names":[],"mappings":";;AAAA,yDAA6C;AAE7C;;GAEG;AACH,MAAa,oBAAqB,SAAQ,8BAAU;IAMlD,YAAY,IAAY,EAAE,UAAuC,EAAE,MAAW,EAAE;QAC9E,KAAK,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAO,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;IACnC,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,YAAY,CAAC,IAAY,EAAE,UAAuC,EAAE,OAAgB;QACzF,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;QAE/D,OAAO,qCAAqC,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/G,CAAC;CACF;AA1BD,oDA0BC","file":"ParseExpressionError.js","sourcesContent":["import {BadRequest} from \"ts-httpexceptions\";\n\n/**\n * @private\n */\nexport class ParseExpressionError extends BadRequest {\n  dataPath: string;\n  requestType: string;\n  errorMessage: string;\n  origin: Error;\n\n  constructor(name: string, expression: string | RegExp | undefined, err: any = {}) {\n    super(ParseExpressionError.buildMessage(name, expression, err.message));\n    this.errorMessage = this.message;\n    this.dataPath = String(expression) || \"\";\n    this.requestType = name;\n    this.origin! = err.origin || err;\n  }\n\n  /**\n   *\n   * @param name\n   * @param expression\n   * @param message\n   * @returns {string}\n   */\n  static buildMessage(name: string, expression: string | RegExp | undefined, message?: string) {\n    name = name.toLowerCase().replace(/parse|params|filter/gi, \"\");\n\n    return `Bad request on parameter \"request.${name}${expression ? \".\" + expression : \"\"}\".\\n${message}`.trim();\n  }\n}\n"],"sourceRoot":"../../../src"}