{"version":3,"sources":["filters/components/PathParamsFilter.ts"],"names":[],"mappings":";;;AAAA,iDAA4C;AAE5C,2DAAsD;AAEtD;;;GAGG;AAEH,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAC3B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,SAAS,CAAC,UAAkB,EAAE,OAAY,EAAE,QAAa;QACvD,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAE5C,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACrH,CAAC;CACF,CAAA;AARY,gBAAgB;IAD5B,eAAM,EAAE;6CAE2B,2BAAY;GADnC,gBAAgB,CAQ5B;AARY,4CAAgB","file":"PathParamsFilter.js","sourcesContent":["import {Filter} from \"../decorators/filter\";\nimport {IFilter} from \"../interfaces\";\nimport {ParseService} from \"../services/ParseService\";\n\n/**\n * @private\n * @filter\n */\n@Filter()\nexport class PathParamsFilter implements IFilter {\n  constructor(private parseService: ParseService) {}\n\n  transform(expression: string, request: any, response: any) {\n    const value = request[\"params\"][expression];\n\n    return value === undefined ? this.parseService.eval(expression, request[\"params\"]) : request[\"params\"][expression];\n  }\n}\n"],"sourceRoot":"../../../src"}