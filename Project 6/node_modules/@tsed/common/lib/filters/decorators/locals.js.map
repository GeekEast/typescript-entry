{"version":3,"sources":["filters/decorators/locals.ts"],"names":[],"mappings":";;AAAA,yDAAoD;AACpD,6DAAwD;AACxD,+DAA0D;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,SAAgB,MAAM,CAAC,UAAyB;IAC9C,OAAO,6BAAa,CAAC,QAAQ,CAAC,2BAAY,EAAE;QAC1C,UAAU;QACV,YAAY,EAAE,KAAK;QACnB,SAAS,EAAE,uBAAU,CAAC,MAAM;KAC7B,CAAC,CAAC;AACL,CAAC;AAND,wBAMC","file":"locals.js","sourcesContent":["import {ParamTypes} from \"../interfaces/ParamTypes\";\nimport {LocalsFilter} from \"../components/LocalsFilter\";\nimport {ParamRegistry} from \"../registries/ParamRegistry\";\n\n/**\n * Locals return the value from [response.locals](http://expressjs.com/en/4x/api.html#res.locals) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Get('/')\n *    get(@Locals() locals: any) {\n *       console.log('Entire locals', locals);\n *    }\n *\n *    @Get('/')\n *    get(@Locals('user') user: any) {\n *       console.log('user', user);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @decorator\n * @returns {Function}\n */\nexport function Locals(expression?: string | any): Function {\n  return ParamRegistry.decorate(LocalsFilter, {\n    expression,\n    useConverter: false,\n    paramType: ParamTypes.LOCALS\n  });\n}\n"],"sourceRoot":"../../../src"}