{"version":3,"sources":["filters/decorators/pathParams.ts"],"names":[],"mappings":";;AAAA,yDAAoD;AACpD,qEAAgE;AAChE,+DAA0D;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAgB,UAAU,CAAC,UAAyB,EAAE,OAAa;IACjE,OAAO,6BAAa,CAAC,QAAQ,CAAC,mCAAgB,EAAE;QAC9C,UAAU;QACV,OAAO;QACP,SAAS,EAAE,uBAAU,CAAC,IAAI;KAC3B,CAAC,CAAC;AACL,CAAC;AAND,gCAMC","file":"pathParams.js","sourcesContent":["import {ParamTypes} from \"../interfaces/ParamTypes\";\nimport {PathParamsFilter} from \"../components/PathParamsFilter\";\nimport {ParamRegistry} from \"../registries/ParamRegistry\";\n\n/**\n * PathParams return the value from [request.params](http://expressjs.com/en/4x/api.html#req.params) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Get('/')\n *    get(@PathParams() params: any) {\n *       console.log('Entire params', params);\n *    }\n *\n *    @Get('/')\n *    get(@PathParams('id') id: string) {\n *       console.log('ID', id);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @returns {Function}\n */\nexport function PathParams(expression?: string | any, useType?: any): Function {\n  return ParamRegistry.decorate(PathParamsFilter, {\n    expression,\n    useType,\n    paramType: ParamTypes.PATH\n  });\n}\n"],"sourceRoot":"../../../src"}