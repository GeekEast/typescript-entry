{"version":3,"sources":["filters/decorators/bodyParams.ts"],"names":[],"mappings":";;AAAA,qEAAgE;AAChE,yDAAoD;AACpD,+DAA0D;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,SAAgB,UAAU,CAAC,UAAyB,EAAE,OAAa;IACjE,OAAO,6BAAa,CAAC,QAAQ,CAAC,mCAAgB,EAAE;QAC9C,UAAU;QACV,OAAO;QACP,YAAY,EAAE,IAAI;QAClB,aAAa,EAAE,IAAI;QACnB,SAAS,EAAE,uBAAU,CAAC,IAAI;KAC3B,CAAC,CAAC;AACL,CAAC;AARD,gCAQC","file":"bodyParams.js","sourcesContent":["import {BodyParamsFilter} from \"../components/BodyParamsFilter\";\nimport {ParamTypes} from \"../interfaces/ParamTypes\";\nimport {ParamRegistry} from \"../registries/ParamRegistry\";\n\n/**\n * BodyParams return the value from [request.body](http://expressjs.com/en/4x/api.html#req.body) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Post('/')\n *    create(@BodyParams() body: any) {\n *       console.log('Entire body', body);\n *    }\n *\n *    @Post('/')\n *    create(@BodyParams('id') id: string) {\n *       console.log('ID', id);\n *    }\n *\n *    @Post('/')\n *    create(@BodyParams('user') user: User) { // with deserialization\n *       console.log('user', user);\n *    }\n *\n *    @Post('/')\n *    create(@BodyParams('users', User) users: User[]) { // with deserialization\n *       console.log('users', users);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @returns {Function}\n */\nexport function BodyParams(expression?: string | any, useType?: any): Function {\n  return ParamRegistry.decorate(BodyParamsFilter, {\n    expression,\n    useType,\n    useConverter: true,\n    useValidation: true,\n    paramType: ParamTypes.BODY\n  });\n}\n"],"sourceRoot":"../../../src"}