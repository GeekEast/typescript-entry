{"version":3,"sources":["filters/decorators/cookies.ts"],"names":[],"mappings":"AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,wBAAgB,aAAa,CAAC,UAAU,CAAC,EAAE,MAAM,GAAG,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG,GAAG,QAAQ,CAMhF;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCG;AACH,wBAAgB,OAAO,CAAC,UAAU,CAAC,EAAE,MAAM,GAAG,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG,GAAG,QAAQ,CAE1E","file":"cookies.d.ts","sourcesContent":["import {ParamTypes} from \"../interfaces/ParamTypes\";\nimport {CookiesFilter} from \"../components/CookiesFilter\";\nimport {ParamRegistry} from \"../registries/ParamRegistry\";\n\n/**\n * Cookies or CookiesParams return the value from [request.cookies](http://expressjs.com/en/4x/api.html#req.cookies) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Post('/')\n *    create(@Cookies() cookies: any) {\n *       console.log('Entire cookies', cookies);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('id') id: string) {\n *       console.log('ID', id);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('user') user: IUser) {\n *       console.log('user', user);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @returns {Function}\n */\nexport function CookiesParams(expression?: string | any, useType?: any): Function {\n  return ParamRegistry.decorate(CookiesFilter, {\n    expression,\n    useType,\n    paramType: ParamTypes.COOKIES\n  });\n}\n\n/**\n * Cookies o CookiesParams return the value from [request.cookies](http://expressjs.com/en/4x/api.html#req.cookies) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Post('/')\n *    create(@Cookies() body: any) {\n *       console.log('Entire body', body);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('id') id: string) {\n *       console.log('ID', id);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('user') user: User) { // with deserialization\n *       console.log('user', user);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('users', User) users: User[]) { // with deserialization\n *       console.log('users', users);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @aliasof CookiesParams\n * @returns {Function}\n */\nexport function Cookies(expression?: string | any, useType?: any): Function {\n  return CookiesParams(expression, useType);\n}\n"],"sourceRoot":"../../../src"}