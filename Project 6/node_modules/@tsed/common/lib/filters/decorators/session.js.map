{"version":3,"sources":["filters/decorators/session.ts"],"names":[],"mappings":";;AAAA,yDAAoD;AACpD,+DAA0D;AAC1D,+DAA0D;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAgB,OAAO,CAAC,UAAyB,EAAE,OAAa;IAC9D,OAAO,6BAAa,CAAC,QAAQ,CAAC,6BAAa,EAAE;QAC3C,UAAU;QACV,OAAO;QACP,SAAS,EAAE,uBAAU,CAAC,OAAO;KAC9B,CAAC,CAAC;AACL,CAAC;AAND,0BAMC","file":"session.js","sourcesContent":["import {ParamTypes} from \"../interfaces/ParamTypes\";\nimport {SessionFilter} from \"../components/SessionFilter\";\nimport {ParamRegistry} from \"../registries/ParamRegistry\";\n\n/**\n * Session return the value from [request.session](http://expressjs.com/en/4x/api.html#req.session) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Post('/')\n *    create(@Session() session: Express.Session) {\n *       console.log('Entire session', session);\n *    }\n *\n *    @Post('/')\n *    create(@Session('id') id: string) {\n *       console.log('ID', id);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @returns {Function}\n */\nexport function Session(expression?: string | any, useType?: any): Function {\n  return ParamRegistry.decorate(SessionFilter, {\n    expression,\n    useType,\n    paramType: ParamTypes.SESSION\n  });\n}\n"],"sourceRoot":"../../../src"}