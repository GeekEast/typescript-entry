{"version":3,"sources":["server/components/GlobalAcceptMimesMiddleware.ts"],"names":[],"mappings":";;;AAAA,yDAAgD;AAChD,yCAAmD;AACnD,2CAAkC;AAClC,mCAAkD;AAElD;;GAEG;AAEH,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IACtC,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAG,CAAC;IAEpE,GAAG,CAAQ,OAAY;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAEjG,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,iCAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5E;IACH,CAAC;CACF,CAAA;AAPC;IAAK,mBAAA,aAAG,EAAE,CAAA;;;;sDAMT;AATU,2BAA2B;IADvC,gBAAU,EAAE;6CAEgC,8BAAqB;GADrD,2BAA2B,CAUvC;AAVY,kEAA2B","file":"GlobalAcceptMimesMiddleware.js","sourcesContent":["import {NotAcceptable} from \"ts-httpexceptions\";\nimport {ServerSettingsService} from \"../../config\";\nimport {Req} from \"../../filters\";\nimport {IMiddleware, Middleware} from \"../../mvc\";\n\n/**\n * @middleware\n */\n@Middleware()\nexport class GlobalAcceptMimesMiddleware implements IMiddleware {\n  constructor(private serverSettingsService: ServerSettingsService) {}\n\n  use(@Req() request: Req) {\n    const find = this.serverSettingsService.acceptMimes.find((mime: any) => !!request.accepts(mime));\n\n    if (!find) {\n      throw new NotAcceptable(this.serverSettingsService.acceptMimes.join(\", \"));\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}