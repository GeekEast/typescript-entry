{"version":3,"sources":["mvc/services/ExpressRouter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAC,MAAM,YAAY,CAAC;AAChC,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AAGnC;;GAEG;AACH,oBAAY,aAAa,GAAG,OAAO,CAAC,MAAM,GAAG;IAC3C,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,uBAAuB,CAAC,QAAQ,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC;CACrG,CAAC;AAEF;;;;;;;;;;;;;;;;;;;GAmBG;AACH,wBAAgB,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,uBAAuB,CAAC,QAAQ,CAAC,GAAG,MAAM,OAEzH","file":"ExpressRouter.d.ts","sourcesContent":["import {Type} from \"@tsed/core\";\nimport * as Express from \"express\";\nimport {Inject} from \"@tsed/di\";\n\n/**\n *\n */\nexport type ExpressRouter = Express.Router & {\n  (target: Type<any>, targetKey: string, descriptor: TypedPropertyDescriptor<Function> | number): any;\n};\n\n/**\n * Inject the ExpressRouter (Express.Router) instance.\n *\n * ### Example\n *\n * ```typescript\n * import {ExpressRouter, Service} from \"@tsed/common\";\n *\n * @Controller(\"/\")\n * export default class OtherService {\n *    constructor(@ExpressRouter router: ExpressRouter) {}\n * }\n * ```\n *\n * @param {Type<any>} target\n * @param {string} targetKey\n * @param {TypedPropertyDescriptor<Function> | number} descriptor\n * @returns {any}\n * @decorator\n */\nexport function ExpressRouter(target: Type<any>, targetKey: string, descriptor: TypedPropertyDescriptor<Function> | number) {\n  return Inject(ExpressRouter)(target, targetKey, descriptor);\n}\n"],"sourceRoot":"../../../src"}