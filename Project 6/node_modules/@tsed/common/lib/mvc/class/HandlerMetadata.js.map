{"version":3,"sources":["mvc/class/HandlerMetadata.ts"],"names":[],"mappings":";;AAAA,qCAA0C;AAE1C,uDAAuI;AACvI,0EAAqE;AACrE,2DAAsD;AAStD,MAAa,eAAe;IAW1B,YAAY,OAAwB;QAN3B,eAAU,GAAY,KAAK,CAAC;QAC5B,SAAI,GAAgB,yBAAW,CAAC,QAAQ,CAAC;QACzC,kBAAa,GAAY,KAAK,CAAC;QAC/B,oBAAe,GAAY,KAAK,CAAC;QAIxC,MAAM,EAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,GAAG,yBAAW,CAAC,QAAQ,EAAC,GAAG,OAAO,CAAC;QAErE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE1D,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAM,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,2BAAe,CAAC,CAAC;YAC1D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAW,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,GAAG,CAAC,eAAQ,CAAC,GAAG,CAAC,0BAAc,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACnF;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;YAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;SACjD;IACH,CAAC;IAED,IAAI,QAAQ;QACV,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SACzB;QAED,MAAM,UAAU,GAAU,CAAC,EAAC,OAAO,EAAE,2BAAe,EAAC,EAAE,EAAC,OAAO,EAAE,4BAAgB,EAAC,CAAC,CAAC;QAEpF,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,UAAU,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,uBAAW,EAAC,CAAC,CAAC;SAC5C;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,UAAU,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,2BAAe,EAAC,CAAC,CAAC;SAC7C;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAEM,SAAS;QACd,OAAO,6BAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC1E,CAAC;IAEM,YAAY,CAAC,SAAc;QAChC,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,CAAC;CACF;AA1DD,0CA0DC","file":"HandlerMetadata.js","sourcesContent":["import {Metadata, Type} from \"@tsed/core\";\nimport {ParamMetadata} from \"../../filters/class/ParamMetadata\";\nimport {ENDPOINT_INFO, EXPRESS_ERR, EXPRESS_NEXT_FN, EXPRESS_REQUEST, EXPRESS_RESPONSE, PARAM_METADATA} from \"../../filters/constants\";\nimport {ParamRegistry} from \"../../filters/registries/ParamRegistry\";\nimport {HandlerType} from \"../interfaces/HandlerType\";\n\nexport interface IHandlerOptions {\n  target: Type<any> | Function;\n  token?: Type<any>;\n  method?: string;\n  type?: HandlerType;\n}\n\nexport class HandlerMetadata {\n  readonly target: any;\n  readonly token: Type<any>;\n  readonly methodClassName: string;\n  readonly method: string;\n  readonly injectable: boolean = false;\n  readonly type: HandlerType = HandlerType.FUNCTION;\n  readonly hasErrorParam: boolean = false;\n  readonly hasNextFunction: boolean = false;\n  handler: any;\n\n  constructor(options: IHandlerOptions) {\n    const {target, token, method, type = HandlerType.FUNCTION} = options;\n\n    this.type = type;\n    this.handler = method ? target.prototype[method] : target;\n\n    if (method) {\n      this.target = target;\n      this.token = token!;\n      this.methodClassName = method;\n      this.method = method;\n      this.hasNextFunction = this.hasParamType(EXPRESS_NEXT_FN);\n      this.hasErrorParam = this.hasParamType(EXPRESS_ERR);\n      this.injectable = (Metadata.get(PARAM_METADATA, target, method) || []).length > 0;\n    }\n\n    if (!this.injectable) {\n      this.hasErrorParam = this.handler.length === 4;\n      this.hasNextFunction = this.handler.length >= 3;\n    }\n  }\n\n  get services(): ParamMetadata[] {\n    if (this.injectable) {\n      return this.getParams();\n    }\n\n    const parameters: any[] = [{service: EXPRESS_REQUEST}, {service: EXPRESS_RESPONSE}];\n\n    if (this.hasErrorParam) {\n      parameters.unshift({service: EXPRESS_ERR});\n    }\n\n    if (this.hasNextFunction) {\n      parameters.push({service: EXPRESS_NEXT_FN});\n    }\n\n    return parameters;\n  }\n\n  public getParams() {\n    return ParamRegistry.getParams(this.target, this.methodClassName) || [];\n  }\n\n  public hasParamType(paramType: any): boolean {\n    return this.getParams().findIndex(p => p.service === paramType) > -1;\n  }\n}\n"],"sourceRoot":"../../../src"}