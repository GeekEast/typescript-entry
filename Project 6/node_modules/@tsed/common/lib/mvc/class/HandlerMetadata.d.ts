import { Type } from "@tsed/core";
import { ParamMetadata } from "../../filters/class/ParamMetadata";
import { HandlerType } from "../interfaces/HandlerType";
export interface IHandlerOptions {
    target: Type<any> | Function;
    token?: Type<any>;
    method?: string;
    type?: HandlerType;
}
export declare class HandlerMetadata {
    readonly target: any;
    readonly token: Type<any>;
    readonly methodClassName: string;
    readonly method: string;
    readonly injectable: boolean;
    readonly type: HandlerType;
    readonly hasErrorParam: boolean;
    readonly hasNextFunction: boolean;
    handler: any;
    constructor(options: IHandlerOptions);
    readonly services: ParamMetadata[];
    getParams(): ParamMetadata[];
    hasParamType(paramType: any): boolean;
}
