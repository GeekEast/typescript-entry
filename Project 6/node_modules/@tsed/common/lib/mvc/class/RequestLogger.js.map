{"version":3,"sources":["mvc/class/RequestLogger.ts"],"names":[],"mappings":"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","file":"RequestLogger.js","sourcesContent":["export class RequestLogger {\n  readonly id: string;\n  readonly url: string;\n  readonly startDate: Date;\n  private readonly ignoreUrlPatterns: any[];\n  private readonly minimalRequestPicker: Function;\n  private readonly completeRequestPicker: Function;\n  private stack: any = [];\n\n  constructor(private logger: any, {id, startDate, url, ignoreUrlPatterns, minimalRequestPicker, completeRequestPicker}: any) {\n    this.id = id;\n    this.url = url;\n    this.startDate = startDate;\n    this.ignoreUrlPatterns = ignoreUrlPatterns.map((pattern: string | RegExp) =>\n      typeof pattern === \"string\" ? new RegExp(pattern, \"gi\") : pattern\n    );\n\n    this.minimalRequestPicker = minimalRequestPicker;\n    this.completeRequestPicker = completeRequestPicker;\n  }\n\n  info(obj: any) {\n    this.run(() => {\n      const data = this.minimalRequestPicker(this.getData(obj));\n      this.stack.push({level: \"info\", data});\n    });\n  }\n\n  debug(obj: any, withRequest: boolean = true) {\n    this.run(() => {\n      obj = this.getData(obj);\n      const data = withRequest ? this.completeRequestPicker(obj) : obj;\n      this.stack.push({level: \"debug\", data});\n    });\n  }\n\n  warn(obj: any) {\n    this.run(() => {\n      const data = this.completeRequestPicker(this.getData(obj));\n      this.stack.push({level: \"warn\", data});\n    });\n  }\n\n  error(obj: any) {\n    this.run(() => {\n      const data = this.completeRequestPicker(this.getData(obj));\n      this.stack.push({level: \"error\", data});\n    });\n  }\n\n  trace(obj: any) {\n    this.run(() => {\n      const data = this.completeRequestPicker(this.getData(obj));\n      this.stack.push({level: \"trace\", data});\n    });\n  }\n\n  public flush() {\n    if (this.stack) {\n      this.stack.forEach(({level, data}: any) => {\n        this.logger[level](data);\n      });\n    }\n  }\n\n  /**\n   * Return the duration between the time when LogIncomingRequest has handle the request and now.\n   * @returns {number}\n   */\n  protected getDuration(): number {\n    return new Date().getTime() - this.startDate.getTime();\n  }\n\n  protected getData(obj: any) {\n    if (typeof obj === \"string\") {\n      obj = {message: obj};\n    }\n\n    return {reqId: this.id, time: new Date(), duration: this.getDuration(), ...obj};\n  }\n\n  protected run(cb: Function) {\n    const match = this.ignoreUrlPatterns.find(reg => !!this.url.match(reg));\n\n    return !match && cb();\n  }\n}\n"],"sourceRoot":"../../../src"}