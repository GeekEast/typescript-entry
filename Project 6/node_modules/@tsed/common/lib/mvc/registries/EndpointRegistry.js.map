{"version":3,"sources":["mvc/registries/EndpointRegistry.ts"],"names":[],"mappings":"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","file":"EndpointRegistry.js","sourcesContent":["import {descriptorOf, getInheritedClass, Metadata, Store, Type} from \"@tsed/core\";\nimport {EndpointMetadata} from \"../class/EndpointMetadata\";\n\n/**\n * Registry for all Endpoint collected on a provide.\n */\nexport class EndpointRegistry {\n  /**\n   * Return all endpoints from the given class. This method doesn't return the endpoints from the parent of the given class.\n   * @param {Type<any>} target\n   * @returns {any}\n   */\n  static getOwnEndpoints(target: Type<any>) {\n    if (!this.hasEndpoints(target)) {\n      Metadata.set(\"endpoints\", [], target);\n    }\n\n    return Metadata.getOwn(\"endpoints\", target);\n  }\n\n  /**\n   * Get all endpoints from a given class and his parents.\n   * @param {Type<any>} target\n   * @returns {EndpointMetadata[]}\n   */\n  static getEndpoints(target: Type<any>): EndpointMetadata[] {\n    return this.getOwnEndpoints(target).concat(this.inherit(target));\n  }\n\n  /**\n   * Gets a value indicating whether the target object or its prototype chain has endpoints.\n   * @param {Type<any>} target\n   * @returns {boolean}\n   */\n  static hasEndpoints(target: Type<any>) {\n    return Metadata.hasOwn(\"endpoints\", target);\n  }\n\n  /**\n   * Get an endpoint.\n   * @param target\n   * @param method\n   */\n  static get(target: Type<any>, method: string | symbol): EndpointMetadata {\n    if (!this.has(target, method)) {\n      const endpoint = new EndpointMetadata(target, method);\n      this.getOwnEndpoints(target).push(endpoint);\n      Metadata.set(\"endpoints\", endpoint, target, method);\n    }\n\n    return Metadata.getOwn(\"endpoints\", target, method);\n  }\n\n  /**\n   * Gets a value indicating whether the target object or its prototype chain has already method registered.\n   * @param target\n   * @param method\n   */\n  static has(target: Type<any>, method: string | symbol): boolean {\n    return Metadata.hasOwn(\"endpoints\", target, method);\n  }\n\n  /**\n   * Append mvc in the pool (before).\n   * @param target\n   * @param targetKey\n   * @param args\n   */\n  static useBefore(target: Type<any>, targetKey: string | symbol, args: any[]) {\n    this.get(target, targetKey).before(args);\n\n    return this;\n  }\n\n  /**\n   * Add middleware and configuration for the endpoint.\n   * @param target\n   * @param targetKey\n   * @param args\n   * @returns {Endpoint}\n   */\n  static use(target: Type<any>, targetKey: string | symbol, args: any[]) {\n    this.get(target, targetKey).merge(args);\n\n    return this;\n  }\n\n  /**\n   * Append mvc in the pool (after).\n   * @param target\n   * @param targetKey\n   * @param args\n   */\n  static useAfter(target: Type<any>, targetKey: string | symbol, args: any[]) {\n    this.get(target, targetKey).after(args);\n\n    return this;\n  }\n\n  /**\n   * Store a data on store manager.\n   * @param target\n   * @param propertyKey\n   * @returns {any}\n   */\n  static store(target: any, propertyKey: string): Store {\n    return Store.from(target, propertyKey, descriptorOf(target, propertyKey));\n  }\n\n  /**\n   * Retrieve all endpoints from inherited class and store it in the registry.\n   * @param {Type<any>} ctrlClass\n   */\n  private static inherit(ctrlClass: Type<any>) {\n    const endpoints: EndpointMetadata[] = [];\n    let inheritedClass = getInheritedClass(ctrlClass);\n\n    while (inheritedClass && EndpointRegistry.hasEndpoints(inheritedClass)) {\n      this.getOwnEndpoints(inheritedClass).forEach((endpointInheritedClass: EndpointMetadata) => {\n        const endpoint = endpointInheritedClass.inherit(ctrlClass);\n\n        endpoints.push(endpoint);\n      });\n\n      inheritedClass = getInheritedClass(inheritedClass);\n    }\n\n    return endpoints;\n  }\n}\n"],"sourceRoot":"../../../src"}