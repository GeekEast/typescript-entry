"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@tsed/core");
const mapReturnedResponse_1 = require("../../utils/mapReturnedResponse");
const useAfter_1 = require("./useAfter");
/**
 * Set the HTTP status for the response. It is a chainable alias of Nodeâ€™s `response.statusCode`.
 *
 * ```typescript
 * @Status(204)
 * async myMethod() {}
 * ```
 *
 * With swagger description:
 *
 * ```typescript
 * @Status(204, {
 *   type: Model
 *   description: "Description"
 * })
 * @Header('Content-Type', 'application-json')
 * async myMethod() {
 * }
 * ```
 *
 * This example will produce the swagger responses object:
 *
 * ```json
 * {
 *   "responses": {
 *     "404": {
 *       "description": "Description",
 *       "headers": {
 *          "Content-Type": {
 *             "type": "string"
 *          }
 *       }
 *     }
 *   }
 * }
 * ```
 *
 * @param code
 * @param options
 * @returns {Function}
 * @decorator
 * @endpoint
 */
function Status(code, options = {}) {
    const response = mapReturnedResponse_1.mapReturnedResponse(options);
    return core_1.applyDecorators(core_1.StoreSet("statusCode", code), core_1.StoreMerge("response", response), core_1.StoreMerge("responses", { [code]: response }), useAfter_1.UseAfter((request, response, next) => {
        if (response.statusCode === 200) {
            response.status(code);
        }
        next();
    }));
}
exports.Status = Status;

//# sourceMappingURL=status.js.map
