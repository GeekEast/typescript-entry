{"version":3,"sources":["mvc/decorators/method/useBeforeEach.ts"],"names":[],"mappings":"AAGA;;;;;;;;;;;;;;;;;;;GAmBG;AACH,wBAAgB,aAAa,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,QAAQ,CActD","file":"useBeforeEach.d.ts","sourcesContent":["import {decorateMethodsOf, DecoratorParameters, getDecoratorType, UnsupportedDecoratorType} from \"@tsed/core\";\nimport {UseBefore} from \"./useBefore\";\n\n/**\n * Mounts the specified middleware function or functions at the specified path: the middleware function is executed when\n * the base of the requested path matches `path.\n *\n * ```typescript\n * @Controller('/')\n * @UseBeforeEach(Middleware1)  // Called before each endpoint\n * export class Ctrl {\n *\n *    @Get('/')\n *    get() { }\n * }\n *\n * ```\n *\n * @returns {Function}\n * @param args\n * @decorator\n * @endpoint\n */\nexport function UseBeforeEach(...args: any[]): Function {\n  return <T>(...decoratorArgs: DecoratorParameters): TypedPropertyDescriptor<T> | void => {\n    switch (getDecoratorType(decoratorArgs, true)) {\n      case \"method\":\n        return UseBefore(...args)(...decoratorArgs);\n\n      case \"class\":\n        decorateMethodsOf(decoratorArgs[0], UseBefore(...args));\n        break;\n\n      default:\n        throw new UnsupportedDecoratorType(UseBeforeEach, decoratorArgs);\n    }\n  };\n}\n"],"sourceRoot":"../../../../src"}