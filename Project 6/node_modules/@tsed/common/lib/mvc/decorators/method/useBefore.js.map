{"version":3,"sources":["mvc/decorators/method/useBefore.ts"],"names":[],"mappings":";;AAAA,qCAAuG;AACvG,wEAAmE;AAEnE;;;;;;;;;;;;;;;;;;;GAmBG;AACH,SAAgB,SAAS,CAAC,GAAG,IAAW;IACtC,OAAO,CAAI,GAAG,aAAkC,EAAqC,EAAE;QACrF,QAAQ,uBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;YAC7C,KAAK,QAAQ;gBACX,mCAAgB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAE,EAAE,IAAI,CAAC,CAAC;gBAEtE,OAAO,aAAa,CAAC,CAAC,CAAQ,CAAC;YACjC,KAAK,OAAO;gBACV,iBAAU,CAAC,aAAa,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;gBAC/D,MAAM;YACR;gBACE,MAAM,IAAI,+BAAwB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;SAChE;IACH,CAAC,CAAC;AACJ,CAAC;AAdD,8BAcC","file":"useBefore.js","sourcesContent":["import {DecoratorParameters, getDecoratorType, StoreMerge, UnsupportedDecoratorType} from \"@tsed/core\";\nimport {EndpointRegistry} from \"../../registries/EndpointRegistry\";\n\n/**\n * Mounts the specified middleware function or functions at the specified path: the middleware function is executed when\n * the base of the requested path matches `path.\n *\n * ```typescript\n * @Controller('/')\n * @UseBefore(Middleware1) // called only one time before all endpoint\n * export class Ctrl {\n *\n *    @Get('/')\n *    @UseBefore(Middleware2)\n *    get() { }\n * }\n * ```\n *\n * @returns {function(any, any, any): *}\n * @param args\n * @decorator\n * @endpoint\n */\nexport function UseBefore(...args: any[]): Function {\n  return <T>(...decoratorArgs: DecoratorParameters): TypedPropertyDescriptor<T> | void => {\n    switch (getDecoratorType(decoratorArgs, true)) {\n      case \"method\":\n        EndpointRegistry.useBefore(decoratorArgs[0], decoratorArgs[1]!, args);\n\n        return decoratorArgs[2] as any;\n      case \"class\":\n        StoreMerge(\"middlewares\", {useBefore: args})(...decoratorArgs);\n        break;\n      default:\n        throw new UnsupportedDecoratorType(UseBefore, decoratorArgs);\n    }\n  };\n}\n"],"sourceRoot":"../../../../src"}