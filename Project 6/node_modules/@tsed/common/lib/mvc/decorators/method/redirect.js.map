{"version":3,"sources":["mvc/decorators/method/redirect.ts"],"names":[],"mappings":";;AAAA,yCAAoC;AAEpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AACH,SAAgB,QAAQ,CAAC,MAAuB,EAAE,QAAiB;IACjE,OAAO,mBAAQ,CAAC,CAAC,OAAY,EAAE,QAAa,EAAE,IAAS,EAAE,EAAE;QACzD,0BAA0B;QAC1B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC3B;aAAM;YACL,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACrC;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;AACL,CAAC;AAVD,4BAUC","file":"redirect.js","sourcesContent":["import {UseAfter} from \"./useAfter\";\n\n/**\n * Redirects to the URL derived from the specified path, with specified status, a positive integer that corresponds to an HTTP status code . If not specified, status defaults to “302 “Found”.\n *\n * ```typescript\n *  @Redirect('/foo/bar')\n *  @Redirect(301, 'http://example.com')\n *  private myMethod() {}\n * ```\n * Redirects can be a fully-qualified URL for redirecting to a different site:\n *\n * ```typescript\n *  @Redirect('http://google.com');\n *  private myMethod() {}\n * ```\n *\n * Redirects can be relative to the root of the host name. For example, if the application is on http://example.com/admin/post/new, the following would redirect to the URL http://example.com/admin:\n *\n * ```typescript\n *  @Redirect('/admin');\n * ```\n * Redirects can be relative to the current URL. For example, from http://example.com/blog/admin/ (notice the trailing slash), the following would redirect to the URL http://example.com/blog/admin/post/new.\n *\n * ```typescript\n *  @Redirect('post/new');\n * ```\n *\n * Redirecting to post/new from http://example.com/blog/admin (no trailing slash), will redirect to http://example.com/blog/post/new.\n *\n * If you found the above behavior confusing, think of path segments as directories (with trailing slashes) and files, it will start to make sense.\n *\n * Path-relative redirects are also possible. If you were on http://example.com/admin/post/new, the following would redirect to http//example.com/admin/post:\n *\n * ```typescript\n *  @Redirect('..');\n * ``\n *\n * A back redirection redirects the request back to the referer, defaulting to / when the referer is missing.\n *\n * ```typescript\n *  @Redirect('back');\n * ```\n *\n * @param status\n * @param location\n * @returns {Function}\n * @decorator\n * @endpoint\n */\nexport function Redirect(status: string | number, location?: string): Function {\n  return UseAfter((request: any, response: any, next: any) => {\n    /* istanbul ignore else */\n    if (typeof status === \"string\") {\n      response.redirect(status);\n    } else {\n      response.redirect(status, location);\n    }\n    next();\n  });\n}\n"],"sourceRoot":"../../../../src"}