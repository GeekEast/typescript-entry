{"version":3,"sources":["mvc/decorators/method/contentType.ts"],"names":[],"mappings":"AAOA;;;;;;;;;;;;;;;;;GAiBG;AACH,wBAAgB,WAAW,CAAC,IAAI,EAAE,MAAM,YAQvC","file":"contentType.d.ts","sourcesContent":["import {applyDecorators, StoreMerge} from \"@tsed/core\";\n/**\n * @module common/mvc\n */\n/** */\nimport {UseAfter} from \"./useAfter\";\n\n/**\n * Sets the Content-Type HTTP header to the MIME type as determined by mime.lookup() for the specified type.\n * If type contains the “/” character, then it sets the `Content-Type` to type.\n *\n * ```typescript\n *  @ContentType('.html');              // => 'text/html'\n *  @ContentType('html');               // => 'text/html'\n *  @ContentType('json');               // => 'application/json'\n *  @ContentType('application/json');   // => 'application/json'\n *  @ContentType('png');                // => image/png\n *  private myMethod() {}\n * ```\n *\n * @param type\n * @returns {Function}\n * @decorator\n * @endpoint\n */\nexport function ContentType(type: string) {\n  return applyDecorators(\n    StoreMerge(\"produces\", [type]),\n    UseAfter((request: any, response: any, next: any) => {\n      response.type(type);\n      next();\n    })\n  );\n}\n"],"sourceRoot":"../../../../src"}