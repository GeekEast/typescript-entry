{"version":3,"sources":["mvc/decorators/class/overrideMiddleware.ts"],"names":[],"mappings":";;AAAA,iCAA0C;AAE1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,0CAA0C;AAC7B,QAAA,kBAAkB,GAAG,qBAAgB,CAAC","file":"overrideMiddleware.js","sourcesContent":["import {OverrideProvider} from \"@tsed/di\";\n\n/**\n * Override a middleware which is already registered in MiddlewareRegistry.\n *\n * ## Usage\n *\n * ```typescript\n * import {OriginalMiddlware, OverrideMiddleware} from \"@tsed/common\";\n *\n * @OverrideMiddleware(OriginalMiddlware)\n * export class CustomMiddleware extends OriginalMiddlware {\n *   public use() {\n *\n *   }\n * }\n * ```\n *\n * ### Override examples\n *\n * * [Usage](/docs/middlewares/override-middleware.md)\n * * [Send response](/docs/middlewares/override/send-response.md)\n * * [Authentication](/docs/middlewares/override/authentication.md)\n * * [Response view](/docs/middlewares/override/response-view.md)\n * * [Global error handler](/docs/middlewares/override/global-error-handler.md)\n *\n * @param {Type<any> & IMiddleware} targetMiddleware\n * @returns {Function}\n * @decorators\n * @deprecated Use OverrideProvider instead of\n */\n// tslint:disable-next-line: variable-name\nexport const OverrideMiddleware = OverrideProvider;\n"],"sourceRoot":"../../../../src"}