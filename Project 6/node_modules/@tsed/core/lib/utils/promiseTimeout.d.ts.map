{"version":3,"sources":["utils/promiseTimeout.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,wBAAgB,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,GAAE,MAAa,GAAG,OAAO,CAAC;IAAC,EAAE,EAAE,OAAO,CAAC;IAAC,QAAQ,EAAE,GAAG,CAAA;CAAC,CAAC,CAchH","file":"promiseTimeout.d.ts","sourcesContent":["/**\n *\n * @param {Promise<any>} promise\n * @param {number} time\n * @returns {Promise<any>}\n */\nexport function promiseTimeout(promise: Promise<any>, time: number = 1000): Promise<{ok: boolean; response: any}> {\n  const timeout = (promise: Promise<any>, time: number) =>\n    new Promise(resolve => {\n      promise.then(response => {\n        resolve();\n\n        return response;\n      });\n      setTimeout(() => resolve({ok: false}), time);\n    });\n\n  promise = promise.then(response => ({ok: true, response}));\n\n  return Promise.race([promise, timeout(promise, time)]);\n}\n"],"sourceRoot":"../../src"}