{"version":3,"sources":["utils/getValue.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,wBAAgB,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,SAAS,SAAM,OAc3F","file":"getValue.d.ts","sourcesContent":["/**\n *\n * @param {string} expression\n * @param scope\n * @param defaultValue\n * @param separator\n * @returns {any}\n */\nexport function getValue(expression: string, scope: any, defaultValue?: any, separator = \".\") {\n  const keys: string[] = expression.split(separator);\n\n  const getValue = (key: string) => {\n    if (typeof scope.get === \"function\") {\n      return scope.get(key);\n    }\n\n    return scope[key];\n  };\n\n  while ((scope = getValue(keys.shift()!)) && keys.length) {}\n\n  return scope === undefined ? defaultValue : scope;\n}\n"],"sourceRoot":"../../src"}